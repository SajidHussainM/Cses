/*

A Gray code is a list of all 2n bit strings of length n, where any two successive strings differ in exactly one bit (i.e., their Hamming distance is one).

Your task is to create a Gray code for a given length n.

Input

The only input line has an integer n.

Output

Print 2n lines that describe the Gray code. You can print any valid solution.

Constraints
1≤n≤16
Example

Input:
2

Output:
00
01
11
10

*/

#include <bits/stdc++.h>
#define mod 100000007
#define ll long long
using namespace std;
 
 
 
 
 
 
 
vector<string> solution(int n){
  if(n==1) {
    vector<string> bres = {"0","1"};
    return bres;
  }
  vector<string> res = solution(n-1);
  vector<string> mres;
  
  for(int i=0;i<res.size();i++){
    mres.push_back("0"+res[i]);
  }
  
  for(int i=res.size()-1;i>=0;i--){
    mres.push_back("1"+res[i]);
  }
  
  return mres;
}
 
 
int main(){
  
  
  int t = 1;
  // cin>>t;
  
  while(t--){
    int n;
    cin>>n;
    
    vector<string> ans = solution(n);
    
    for(auto it:ans){
      cout<<it;
      cout<<endl;
    }
    
    
  }
    
    
  return 0;
    
  }
  
 
